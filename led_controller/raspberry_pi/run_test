#!/usr/bin/env python3
"""
Test runner for LED Controller project

Usage:
  ./run_test test_both_teensys
  ./run_test simple_button_test
  ./run_test test/test_individual_strips.py  (also works with .py extension)

This script handles imports correctly so you can run tests directly.
"""
import sys
import runpy
import os

def main():
    if len(sys.argv) != 2:
        print("Usage: ./run_test <test_name>")
        print("\nAvailable tests:")
        test_dir = os.path.join(os.path.dirname(__file__), 'test')
        if os.path.exists(test_dir):
            for file in sorted(os.listdir(test_dir)):
                if file.endswith('.py') and not file.startswith('__'):
                    print(f"  {file[:-3]}")
        sys.exit(1)

    test_name = sys.argv[1]
    
    # Clean up the test name
    test_name = test_name.replace('test/', '').replace('.py', '')
    module_name = f"test.{test_name}"
    
    try:
        print(f"üöÄ Running {test_name}...")
        print("-" * 50)
        runpy.run_module(module_name, run_name='__main__')
    except ModuleNotFoundError as e:
        print(f"‚ùå Could not find test: {test_name}")
        print(f"   Error: {e}")
        print("\nüí° Available tests:")
        test_dir = os.path.join(os.path.dirname(__file__), 'test')
        if os.path.exists(test_dir):
            for file in sorted(os.listdir(test_dir)):
                if file.endswith('.py') and not file.startswith('__'):
                    print(f"     {file[:-3]}")
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Test interrupted by user")
    except Exception as e:
        print(f"‚ùå Error running test: {e}")

if __name__ == "__main__":
    main()
